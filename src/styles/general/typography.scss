//
// Typography
//

// Base

body {
  font-family: $body-font-family;
  font-size: $font-size-base;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-weight: $font-weight-base;
  line-height: $line-height-base;
  color: $body-color;
  text-align: left;
  text-rendering: optimizeLegibility;
  background-color: $body-bg;
}

// Will cotain every heading variant

$heading-list: ();

// Generate heading variants
@each $type, $props in $headings {
  #{$type},
  .#{$type} {
    @each $prop, $value in $props {
      #{$prop}: $value;
    }
  }

  $heading-list: append($heading-list, $type, comma);
  $heading-list: append($heading-list, '.#{$type}', comma);
}

// Common heading styles (for every heading)

#{$heading-list} {
  font-family: $headings-font-family;
}

.title {
  margin-bottom: 1.1666em;
  font-size: rem(48);
  font-weight: $font-weight-semibold;
  line-height: $headings-line-height-md;
}

p {
  margin-bottom: $paragraph-margin-bottom;
}

small {
  font-size: $font-size-sm;
}

a {
  font-weight: inherit;
  color: $link-color;
  text-decoration: $link-decoration;
  transition: color $duration-shortest $easing;

  &:hover,
  &:focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }

  &:active {
    color: $link-active-color;
  }
}

.link--unstyled {
  font-weight: $font-weight-base;
  color: inherit;
  text-decoration: none;

  &:hover {
    color: inherit;
    text-decoration: none;
  }
}

.link--inverse {
  text-decoration: none;

  &:hover,
  &:focus {
    text-decoration: underline;
  }
}

hr {
  border: 0;
  border-top: $hr-border-width $hr-border-style $hr-border-color;
}

.text-subtle {
  font-size: $font-size-md;
  color: $color-disabled;
}
